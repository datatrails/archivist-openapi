{
  "swagger": "2.0",
  "info": {
    "title": "Invites API",
    "description": "API to manage Email Invites.",
    "version": "1.0",
    "contact": {
      "name": "DataTrails",
      "url": "https://www.datatrails.ai"
    }
  },
  "tags": [],
  "basePath": "/archivist/v1/invites",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "List invites",
        "description": "Returns a paginated list of invites",
        "operationId": "Invites_ListInvites",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListInvitesResponse"
            }
          },
          "400": {
            "description": "Returned when the request is badly formed."
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "403": {
            "description": "Returned when the user is not authorized to read the invite."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          },
          "500": {
            "description": "Returned when the underlying storage system returns an error."
          }
        },
        "parameters": [
          {
            "name": "order_by",
            "description": "Specify the sort order for the results.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DEFAULT",
              "DISPLAY_NAME"
            ],
            "default": "DEFAULT"
          },
          {
            "name": "page_size",
            "description": "Maximum entries per page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "description": "The next_page_token returned from a previous list request if any.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "description": "email name for filtering\n\nEmail address of the invitee.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Invites"
        ]
      },
      "post": {
        "summary": "Create an invite",
        "description": "This request creates a new invite. The message is the text that will be inserted into email.",
        "operationId": "Invites_CreateInvite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Invite"
            }
          },
          "400": {
            "description": "Returned when the request is badly formed."
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "403": {
            "description": "Returned when the user is not authorized to create a invite."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          },
          "500": {
            "description": "Returned when the underlying storage system returns an error."
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "The body of a request to create new Invite.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateInviteRequest"
            }
          }
        ],
        "tags": [
          "Invites"
        ]
      }
    },
    "/{uuid}": {
      "get": {
        "summary": "Get an invite",
        "description": "Returns the identified invite",
        "operationId": "Invites_GetInvite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Invite"
            }
          },
          "400": {
            "description": "Returned when the request is badly formed."
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "403": {
            "description": "Returned when the user is not authorized to read the invite."
          },
          "404": {
            "description": "Returned when the identified invite does not exist."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          },
          "500": {
            "description": "Returned when the underlying storage system returns an error."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "Specify the Invite UUID where `invites/{uuid}` is the Invite Identity e.g. `add30235-1424-4fda-840a-d5ef82c4c96f` from Identity `invites/add30235-1424-4fda-840a-d5ef82c4c96f`.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Invites"
        ]
      },
      "delete": {
        "summary": "Delete an invite",
        "description": "Delete the identified invite",
        "operationId": "Invites_DeleteInvite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "Returned when the request is badly formed."
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "403": {
            "description": "Returned when the user is not authorized to delete the invite."
          },
          "404": {
            "description": "Returned when the identified laccess policy does not exist."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          },
          "500": {
            "description": "Returned when the underlying storage system returns an error."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "Specify the Invite UUID where `invites/{uuid}` is the Invite Identity e.g. `add30235-1424-4fda-840a-d5ef82c4c96f` from Identity `invites/add30235-1424-4fda-840a-d5ef82c4c96f`",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Invites"
        ]
      }
    }
  },
  "definitions": {
    "ListInvitesRequestOrderBy": {
      "type": "string",
      "enum": [
        "DEFAULT",
        "DISPLAY_NAME"
      ],
      "default": "DEFAULT",
      "title": "Supported sort orders"
    },
    "v1Cap": {
      "type": "object",
      "properties": {
        "resource_type": {
          "type": "string",
          "description": "String identifying the capped resource type"
        },
        "resource_remaining": {
          "type": "string",
          "format": "int64",
          "description": "Number of capped resources remaining"
        }
      }
    },
    "v1Caps": {
      "type": "object",
      "properties": {
        "caps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Cap"
          },
          "description": "List of relevant capped resources"
        }
      }
    },
    "v1CountInvitesResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1CreateInviteRequest": {
      "type": "object",
      "example": {
        "message": "Some text",
        "email": "bob@job"
      },
      "properties": {
        "message": {
          "type": "string",
          "description": "Text to be inserted into email.",
          "maxLength": 256
        },
        "email": {
          "type": "string",
          "description": "Email address of the invitee.",
          "maxLength": 128
        }
      },
      "description": "The body of a request to create new Invite.",
      "required": [
        "message"
      ]
    },
    "v1Invite": {
      "type": "object",
      "example": {
        "identity": "invites/08838336-c357-460d-902a-3aba9528dd22",
        "message": "Text to be inserted in email",
        "email": "bob@job",
        "expiry_time": "2022-05-06T07:35:21Z"
      },
      "properties": {
        "identity": {
          "type": "string",
          "description": "Unique identification for the invite, Relative Resource Name",
          "title": "generated identity for the entry"
        },
        "message": {
          "type": "string",
          "description": "Text to be inserted into email invite.",
          "title": "user friendly message",
          "maxLength": 256
        },
        "email": {
          "type": "string",
          "description": "Email address of the invitee.",
          "maxLength": 128
        },
        "expiry_time": {
          "type": "string",
          "format": "date-time",
          "description": "invite expiry time",
          "readOnly": true
        }
      },
      "description": "Describes Invite."
    },
    "v1ListInvitesResponse": {
      "type": "object",
      "example": {
        "invites": [
          {
            "identity": "invites/08838336-c357-460d-902a-3aba9528dd22",
            "message": "Some text",
            "email": "bob@job",
            "expiry_time": "2022-05-06T07:35:21Z"
          }
        ],
        "page_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6InN0dW50aWR"
      },
      "properties": {
        "invites": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Invite"
          }
        },
        "next_page_token": {
          "type": "string",
          "description": "Token to retrieve the next page of results or empty if there are none."
        }
      },
      "description": "List of invites (or the next page in a continuing  list request"
    }
  }
}

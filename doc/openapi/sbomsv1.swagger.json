{
  "swagger": "2.0",
  "info": {
    "title": "Sboms API",
    "description": "API to manage sboms.",
    "version": "1.0",
    "contact": {
      "name": "Jitsuin",
      "url": "https://www.jitsuin.com"
    }
  },
  "tags": [
    {
      "name": "Sboms"
    }
  ],
  "host": "docs.rkvst.com",
  "basePath": "/api/archivist/v1/sboms",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/archivist/v1/sboms": {
      "get": {
        "summary": "List Sboms",
        "description": "Returns a paginated list of Sboms",
        "operationId": "Sboms_ListSboms",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSbomsResponse"
            }
          },
          "400": {
            "description": "Returned when the request is badly formed.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user is not authorized to read the TLS CA certificate.",
            "schema": {}
          },
          "500": {
            "description": "Returned when the underlying storage system returns an error.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uploaded_before",
            "description": "Threshold Timestamp for all uploads before.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "uploaded_since",
            "description": "Threshold Timestamp for all uploads since.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "trusted",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TRUSTEDSTATUS_UNSPECIFIED",
              "TRUSTED",
              "UNTRUSTED"
            ],
            "default": "TRUSTEDSTATUS_UNSPECIFIED"
          },
          {
            "name": "lifecycle_status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "LIFECYCLESTATUS_UNSPECIFIED",
              "ACTIVE",
              "WITHDRAWN"
            ],
            "default": "LIFECYCLESTATUS_UNSPECIFIED"
          },
          {
            "name": "private",
            "description": "whether the request is private, defaults to false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "search",
            "description": "search term.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order_by",
            "description": "Specify the sort order for the results.\ne.g. `version desc`.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Maximum entries per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "description": "The next_page_token returned from a previous list request if any.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sboms"
        ]
      }
    },
    "/archivist/v1/sboms/-/metadata": {
      "get": {
        "summary": "Get Sbom metadata",
        "description": "Returns the identified Sbom metadata",
        "operationId": "Sboms_ListMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSbomsResponse"
            }
          },
          "400": {
            "description": "Returned when the request is badly formed.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user is not authorized to read the TLS CA certificate.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the identified TLS CA certificate does not exist.",
            "schema": {}
          },
          "500": {
            "description": "Returned when the underlying storage system returns an error.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uploaded_before",
            "description": "Threshold Timestamp for all uploads before.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "uploaded_since",
            "description": "Threshold Timestamp for all uploads since.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "trusted",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TRUSTEDSTATUS_UNSPECIFIED",
              "TRUSTED",
              "UNTRUSTED"
            ],
            "default": "TRUSTEDSTATUS_UNSPECIFIED"
          },
          {
            "name": "lifecycle_status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "LIFECYCLESTATUS_UNSPECIFIED",
              "ACTIVE",
              "WITHDRAWN"
            ],
            "default": "LIFECYCLESTATUS_UNSPECIFIED"
          },
          {
            "name": "private",
            "description": "whether the request is private, defaults to false.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "search",
            "description": "search term.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order_by",
            "description": "Specify the sort order for the results.\ne.g. `version desc`.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Maximum entries per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "description": "The next_page_token returned from a previous list request if any.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sboms"
        ]
      }
    },
    "/archivist/v1/sboms/{uuid}/metadata": {
      "get": {
        "summary": "Get Sbom metadata",
        "description": "Returns the identified Sbom metadata",
        "operationId": "Sboms_GetMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SbomMetadata"
            }
          },
          "400": {
            "description": "Returned when the request is badly formed.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user is not authorized to read the TLS CA certificate.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the identified TLS CA certificate does not exist.",
            "schema": {}
          },
          "500": {
            "description": "Returned when the underlying storage system returns an error.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sboms"
        ]
      }
    },
    "/archivist/v1/sboms/{uuid}:publish": {
      "post": {
        "summary": "Publishes an Sbom",
        "description": "Publicly publishes an Sbom",
        "operationId": "Sboms_PublishSbom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SbomMetadata"
            }
          },
          "400": {
            "description": "Returned when the request is badly formed.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user is not authorized to read the TLS CA certificate.",
            "schema": {}
          },
          "500": {
            "description": "Returned when the underlying storage system returns an error.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sboms"
        ]
      }
    },
    "/archivist/v1/sboms/{uuid}:withdraw": {
      "post": {
        "summary": "Withdraws an Sbom",
        "description": "Withdraws an Sbom",
        "operationId": "Sboms_WithdrawSbom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SbomMetadata"
            }
          },
          "400": {
            "description": "Returned when the request is badly formed.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user is not authorized to read the TLS CA certificate.",
            "schema": {}
          },
          "500": {
            "description": "Returned when the underlying storage system returns an error.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sboms"
        ]
      }
    }
  },
  "definitions": {
    "ListSbomsRequestTrustedStatus": {
      "type": "string",
      "enum": [
        "TRUSTEDSTATUS_UNSPECIFIED",
        "TRUSTED",
        "UNTRUSTED"
      ],
      "default": "TRUSTEDSTATUS_UNSPECIFIED",
      "description": "whether the uploader is trusted\nhas to be a truthy or falsy value."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1ListSbomsRequestLifecycleStatus": {
      "type": "string",
      "enum": [
        "LIFECYCLESTATUS_UNSPECIFIED",
        "ACTIVE",
        "WITHDRAWN"
      ],
      "default": "LIFECYCLESTATUS_UNSPECIFIED"
    },
    "v1ListSbomsResponse": {
      "type": "object",
      "example": {
        "sboms": [
          {
            "identity": "sboms/01038663-c357-470d-912a-3abc9528dd21",
            "author": "jitsuin",
            "supplier": "jitsuin",
            "component": "archivist",
            "version": "5.3.2-stable",
            "hash": "9209FE5A352860A4920DF6E2597A2413248754463BE35A0A9430F9B9F51C5A52",
            "uniqueid": "597A2413248754463",
            "upload_date": "2019-08-11 10:06:43",
            "trusted": "true",
            "lifecycle_status": "ACTIVE"
          }
        ],
        "page_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6InN0dW50aWR"
      },
      "properties": {
        "sboms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SbomMetadata"
          }
        },
        "next_page_token": {
          "type": "string",
          "description": "Token to retrieve the next page of results or empty if there are none."
        }
      },
      "description": "List of Sboms (or the next page in a continuing  list request"
    },
    "v1Sbom": {
      "type": "object",
      "properties": {
        "sbom": {
          "type": "string",
          "format": "byte",
          "title": "sbom file contents"
        }
      }
    },
    "v1SbomMetadata": {
      "type": "object",
      "properties": {
        "identity": {
          "type": "string",
          "title": "generated identity for the entry"
        },
        "authors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "SBOM scraped metadata starts here"
        },
        "supplier": {
          "type": "string",
          "title": "who supplies the component"
        },
        "component": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "hashes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the component hash"
        },
        "unique_id": {
          "type": "string",
          "title": "the sbom uniqueid"
        },
        "upload_date": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp for the upload date.",
          "title": "the date uploaded"
        },
        "uploaded_by": {
          "type": "string",
          "title": "the organisation who uploaded the sbom"
        },
        "trusted": {
          "type": "boolean",
          "title": "whether the uploader is trusted"
        },
        "lifecycle_status": {
          "$ref": "#/definitions/v1SbomMetadataLifecycleStatus"
        }
      }
    },
    "v1SbomMetadataLifecycleStatus": {
      "type": "string",
      "enum": [
        "LIFECYCLESTATUS_UNSPECIFIED",
        "ACTIVE",
        "WITHDRAWN"
      ],
      "default": "LIFECYCLESTATUS_UNSPECIFIED"
    }
  }
}

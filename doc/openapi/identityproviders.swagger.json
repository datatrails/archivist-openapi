{
  "swagger": "2.0",
  "info": {
    "title": "Identity Provider Management API",
    "version": "1.1",
    "contact": {
      "name": "Jitsuin",
      "url": "https://www.jitsuin.com"
    }
  },
  "tags": [
    {
      "name": "IdentityProviders"
    }
  ],
  "host": "jitsuin.readthedocs.io",
  "basePath": "/archivist/v1",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/archivist/v1/identityproviders": {
      "get": {
        "summary": "Get list of identity providers",
        "description": "Returns a paginated list of IdentityProviders",
        "operationId": "IdentityProviders_ListIdentityProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListIdentityProvidersResponse"
            }
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user is not authorized to list the identity providers.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "order_by",
            "description": "Specify the sort order for the results. By display_name and by named\nextended attribute are supported.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "DISPLAY_NAME",
              "EXTENDED_ATTRIBUTE"
            ],
            "default": "UNSPECIFIED"
          },
          {
            "name": "page_size",
            "description": "Maximum identity providers per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "description": "The next_page_token returned from a previous list request if any.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "display_name",
            "description": "Further fields are bound to query parameters and act to filter the result.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "IdentityProviders"
        ]
      }
    },
    "/archivist/v1/{identity}": {
      "get": {
        "summary": "Get an identity provider",
        "description": "Returns the identity provider associated with the identifying Relative Resource Name, e.g. `identityproviders/08838336-c357-460d-902a-3aba9528dd22`",
        "operationId": "IdentityProviders_GetIdentityProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IdentityProvider"
            }
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user is not authorized to read the identity provider.",
            "schema": {}
          },
          "404": {
            "description": "Returned when a identity provider with the identity does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "identity",
            "description": "Unique identification for the identity provider. Relative Resource Name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "IdentityProviders"
        ]
      }
    }
  },
  "definitions": {
    "ListIdentityProvidersRequestOrderBy": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "DISPLAY_NAME",
        "EXTENDED_ATTRIBUTE"
      ],
      "default": "UNSPECIFIED",
      "title": "Supported sort orders"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AzureActiveDirectoryIdentityProvider": {
      "type": "object",
      "example": {
        "api_id": "9876543210-fedc-8765-4321-cba9876543210",
        "consent_uri": "https://contoso-avid.prod.jitsuin.io"
      },
      "properties": {
        "api_id": {
          "type": "string",
          "description": "Azure API service principal ID.",
          "title": "Azure registered Application id",
          "maxLength": 32
        },
        "consent_uri": {
          "type": "string",
          "description": "Azure Administrator consent URI.",
          "title": "Azure Admnin Consent URI",
          "maxLength": 4096
        }
      },
      "description": "Describes an Azure Active Directory identity provider",
      "title": "identity_provider_type_info where asset_type is AzureActiveDirectory"
    },
    "v1GenericProvider": {
      "type": "object",
      "example": {},
      "description": "Describes an generic Open ID Connect identity provider"
    },
    "v1IdentityProvider": {
      "type": "object",
      "example": [
        {
          "identity": "identityproviders/08838336-c357-460d-902a-3aba9528dd22",
          "display_name": "Synsation Azure Active Directory",
          "description": "Primary Azure Active Directory for Synsation Corporation, IL, USA",
          "oauth2_scope": "https://synsation-avid.prod.jitsuin.io/user_impersonation",
          "callback_host": "https://synsation-avid.prod.jitsuin.io",
          "provider_uri": "https://login.microsoftonline.com/09123456789-abcd-1234-5678-0123456789abc/v2.0",
          "client_id": "9876543210-fedc-8765-4321-cba9876543210",
          "prompt": "select_account",
          "audiences": "https://synsation-avid.prod.jitsuin.io",
          "jwks": "https://login.microsoftonline.com/09123456789-abcd-1234-5678-0123456789abc/discovery/v2.0/keys",
          "issuer": "https://sts.windows.net/09123456789-abcd-1234-5678-0123456789abc/",
          "azure_active_directory": {
            "api_id": "9876543210-fedc-8765-4321-cba9876543210",
            "consent_uri": "https://contoso-avid.prod.jitsuin.io"
          },
          "extended_attributes": {
            "Azure Subscription": "09123456789-abcd-1234-5678-0123456789abc",
            "Department": "OT management"
          }
        }
      ],
      "properties": {
        "identity": {
          "type": "string",
          "description": "Unique identification for the identity provider, Relative Resource Name.",
          "maxLength": 128
        },
        "display_name": {
          "type": "string",
          "description": "Customer friendly name for the identity provider.",
          "maxLength": 128
        },
        "oauth2_scope": {
          "type": "string",
          "description": "Used to specify the scope of the requested authorisation in OAuth.",
          "maxLength": 4096
        },
        "callback_host": {
          "type": "string",
          "description": "The Relying Party callback host for the authentication response.",
          "maxLength": 4096
        },
        "provider_uri": {
          "type": "string",
          "description": "The OpenID Provider URI.",
          "maxLength": 4096
        },
        "client_id": {
          "type": "string",
          "description": "The client identifier of the Resource Provider at the OpenID Provider.",
          "maxLength": 4096
        },
        "audiences": {
          "type": "string",
          "description": "URIs of clients for whom the Open ID Connect tokens are valid.",
          "maxLength": 4096
        },
        "jwks": {
          "type": "string",
          "description": "JSON Web Token public signing key URI.",
          "maxLength": 4096
        },
        "issuer": {
          "type": "string",
          "description": "JSON Web Token issuer.",
          "maxLength": 4096
        },
        "extended_attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Customer defined extended attributes. keys are max_length 1024, values\nmax_length 4096"
        },
        "GenericProvider": {
          "$ref": "#/definitions/v1GenericProvider",
          "description": "Generic Open ID Connect identity provider."
        },
        "azure_active_directory": {
          "$ref": "#/definitions/v1AzureActiveDirectoryIdentityProvider",
          "description": "Azure Active Directory identity provider specific attributes."
        },
        "prompt": {
          "type": "string",
          "description": "Auth URI prmopt query.",
          "maxLength": 256
        }
      },
      "description": "Describes an identity provider"
    },
    "v1ListIdentityProvidersResponse": {
      "type": "object",
      "properties": {
        "identity_providers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1IdentityProvider"
          },
          "title": "There will be at most ListIdentityProvidersRequest.page_size items"
        },
        "next_page_token": {
          "type": "string",
          "description": "Token to retrieve the next page of results or empty if there are none."
        }
      }
    }
  }
}

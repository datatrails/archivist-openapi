{
  "swagger": "2.0",
  "info": {
    "title": "Compliance API",
    "description": "API to manage Compliance.",
    "version": "1.0",
    "contact": {
      "name": "RKVST",
      "url": "https://www.rkvst.com"
    }
  },
  "tags": [
    {
      "name": "Compliance",
      "description": "List compliance statuses for an asset"
    },
    {
      "name": "CompliancePolicies",
      "description": "Read and modify Compliance Policies"
    },
    {
      "name": "Unsupported",
      "description": "Internal APIs that are unstable and should not be used in a production setting."
    }
  ],
  "basePath": "/_api",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/archivist/v1/compliance/assets/{uuid}": {
      "get": {
        "summary": "List all compliance status relevant to an asset",
        "operationId": "Compliance_ListAssetCompliance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAssetComplianceResponse"
            }
          },
          "206": {
            "description": "The number of compliance statements exceeds the servers limit. "
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "403": {
            "description": "Returned when the user is not authorized to access the requested resource."
          },
          "404": {
            "description": "Returned when the asset with the id does not exist."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "Specify the Asset UUID where `assets/{uuid}` is the Asset Identity e.g. `add30235-1424-4fda-840a-d5ef82c4c96f` from Identity `assets/add30235-1424-4fda-840a-d5ef82c4c96f`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_size",
            "description": "Maximum results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "description": "The next_page_token returned from a previous list request if any.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order_by",
            "description": "Specify the sort order for the results.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DEFAULT"
            ],
            "default": "DEFAULT"
          },
          {
            "name": "compliant_at",
            "description": "timestamp at which compliance is determined\n\ntime at which compliance is determined",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Compliance"
        ]
      }
    },
    "/archivist/v1/compliance_policies": {
      "get": {
        "operationId": "Compliance_ListCompliancePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCompliancePolicyResponse"
            }
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "403": {
            "description": "Returned when the user is not authorized to access the requested resource."
          },
          "404": {
            "description": "Returned when the asset with the id does not exist."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "description": "Maximum results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "description": "The next_page_token returned from a previous list request if any.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order_by",
            "description": "Specify the sort order for the results.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DEFAULT"
            ],
            "default": "DEFAULT"
          },
          {
            "name": "compliance_type",
            "description": "policy type\n\n - COMPLIANCE_SINCE: time since specific event greated than X\n - COMPLIANCE_CURRENT_OUTSTANDING: unresolved event currently on asset (eg. vulnerablity)\n - COMPLIANCE_PERIOD_OUTSTANDING: no unresolved events for longer than X\n - COMPLIANCE_DYNAMIC_TOLERANCE: Dynamic tolerance with dynamic window etc..\n - COMPLIANCE_RICHNESS: compliance on comparison of asset attribute value to predefined comparator.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "COMPLIANCE_TYPE_UNDEFINED",
              "COMPLIANCE_SINCE",
              "COMPLIANCE_CURRENT_OUTSTANDING",
              "COMPLIANCE_PERIOD_OUTSTANDING",
              "COMPLIANCE_DYNAMIC_TOLERANCE",
              "COMPLIANCE_RICHNESS"
            ],
            "default": "COMPLIANCE_TYPE_UNDEFINED"
          },
          {
            "name": "description",
            "description": "Customer description of the compliance policy.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "display_name",
            "description": "Customer friendly name for the compliance policy.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CompliancePolicies"
        ]
      },
      "post": {
        "operationId": "Compliance_AddCompliancePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CompliancePolicyResponse"
            }
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "402": {
            "description": "Returned when the user's quota of compliance policies has been reached."
          },
          "403": {
            "description": "Returned when the user is not authorized to access the requested resource."
          },
          "404": {
            "description": "Returned when the asset with the id does not exist."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "request adding new compliance policy",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddCompliancePolicyRequest"
            }
          }
        ],
        "tags": [
          "CompliancePolicies"
        ]
      }
    },
    "/archivist/v1/compliance_policies/{uuid}": {
      "get": {
        "operationId": "Compliance_GetCompliancePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CompliancePolicyResponse"
            }
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "403": {
            "description": "Returned when the user is not authorized to access the requested resource."
          },
          "404": {
            "description": "Returned when the asset with the id does not exist."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "Specify the Compliance Policy UUID where `compliance_policies/{uuid}` is the Compliance Policy Identity e.g. `add30235-1424-4fda-840a-d5ef82c4c96f` from Identity `compliance_policies/add30235-1424-4fda-840a-d5ef82c4c96f`",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CompliancePolicies"
        ]
      },
      "delete": {
        "operationId": "Compliance_DeleteCompliancePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CompliancePolicyResponse"
            }
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "403": {
            "description": "Returned when the user is not authorized to access the requested resource."
          },
          "404": {
            "description": "Returned when the asset with the id does not exist."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "Specify the Compliance Policy UUID where `compliance_policies/{uuid}` is the Compliance Policy Identity e.g. `add30235-1424-4fda-840a-d5ef82c4c96f` from Identity `compliance_policies/add30235-1424-4fda-840a-d5ef82c4c96f`",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CompliancePolicies"
        ]
      }
    },
    "/archivist/v1/compliance_policies:caps": {
      "get": {
        "summary": "Get remaining capped resources for CompliancePolicies",
        "description": "Not stable or officially supported. Get remaining capped resources for CompliancePolicies",
        "operationId": "Compliance_GetCaps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Caps"
            }
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          }
        },
        "tags": [
          "CompliancePolicies",
          "Unsupported"
        ]
      }
    },
    "/archivist/v1/compliance_policies:openapi": {
      "get": {
        "summary": "Get OpenAPI spec for Compliance",
        "description": "Get OpenAPI v2.0 spec for Compliance",
        "operationId": "Compliance_GetOpenAPI",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "401": {
            "description": "Returned when the user is not authenticated to the system."
          },
          "429": {
            "description": "Returned when a user exceeds their subscription's rate limit for requests."
          }
        },
        "tags": [
          "CompliancePolicies"
        ]
      }
    }
  },
  "definitions": {
    "v1AddCompliancePolicyRequest": {
      "type": "object",
      "example": {
        "compliance_type": "COMPLIANCE_SINCE",
        "description": "Ensure Maintenance is performed daily",
        "display_name": "Daily Maintenance",
        "asset_filter": [
          {
            "or": [
              "attributes.arc_location_identity:locations/5eef2b71-35c1-4376-a166-6c64bfa72f4b"
            ]
          }
        ],
        "event_display_type": "Maintenance Performed",
        "time_period_seconds": 86800
      },
      "properties": {
        "compliance_type": {
          "$ref": "#/definitions/v1ComplianceType",
          "description": "policy type",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Customer description of the compliance policy.",
          "readOnly": true,
          "maxLength": 4096
        },
        "display_name": {
          "type": "string",
          "description": "display name",
          "readOnly": true,
          "maxLength": 1024
        },
        "asset_filter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Filter",
            "readOnly": true
          },
          "description": "filter for asset this compliance policy is for [ { or: [\"a:b\", \"c:d\"]}, { or: [...]}]"
        },
        "event_display_type": {
          "type": "string",
          "description": "this is the target event_display_type - always required",
          "readOnly": true
        },
        "closing_event_display_type": {
          "type": "string",
          "description": "this is the correlated event type",
          "readOnly": true
        },
        "time_period_seconds": {
          "type": "string",
          "format": "int64",
          "description": "time delta - required for SINCE and PERIOD_OUTSTANDING",
          "readOnly": true
        },
        "dynamic_window": {
          "type": "string",
          "format": "int64",
          "description": "valid period for policy - required for DYNAMIC_TOLERANCE",
          "readOnly": true
        },
        "dynamic_variability": {
          "type": "number",
          "format": "float",
          "description": "number of standard deviations - required for DYNAMIC_TOLERANCE",
          "readOnly": true
        },
        "richness_assertions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Filter",
            "readOnly": true
          },
          "description": "assertions for the richness of this compliance policy [ { or: [\"a<b\", \"c>=d\"]}, { or: [...]}]",
          "title": "richness assertions follows the same pattern as filters [{\"or\":[\"foo=bar\", \"baz=fiz\"]}]"
        }
      },
      "description": "request adding new compliance policy"
    },
    "v1Cap": {
      "type": "object",
      "properties": {
        "resource_type": {
          "type": "string",
          "description": "String identifying the capped resource type"
        },
        "resource_remaining": {
          "type": "string",
          "format": "int64",
          "description": "Number of capped resources remaining"
        }
      }
    },
    "v1Caps": {
      "type": "object",
      "properties": {
        "caps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Cap"
          },
          "description": "List of relevant capped resources"
        }
      }
    },
    "v1CompliancePolicyResponse": {
      "type": "object",
      "example": {
        "identity": "compliance_policies/463fab3a-bae5-4349-8f76-f6454da20c9d",
        "compliance_type": "COMPLIANCE_SINCE",
        "description": "Ensure Maintenance is performed daily",
        "display_name": "Daily Maintenance",
        "asset_filter": [
          {
            "or": [
              "attributes.arc_location_identity:locations/5eef2b71-35c1-4376-a166-6c64bfa72f4b"
            ]
          }
        ],
        "event_display_type": "Maintenance Performed",
        "time_period_seconds": 86800
      },
      "properties": {
        "identity": {
          "type": "string"
        },
        "compliance_type": {
          "$ref": "#/definitions/v1ComplianceType"
        },
        "description": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "asset_filter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Filter"
          }
        },
        "event_display_type": {
          "type": "string"
        },
        "closing_event_display_type": {
          "type": "string"
        },
        "time_period_seconds": {
          "type": "string",
          "format": "int64"
        },
        "dynamic_window": {
          "type": "string",
          "format": "int64",
          "title": "valid perod for policy - only valid for SINCE and CURRENT"
        },
        "dynamic_variability": {
          "type": "number",
          "format": "float",
          "title": "number of standard deviations - only valid for SINCE and CURRENT"
        },
        "richness_assertions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Filter"
          }
        }
      },
      "description": "compliance policy"
    },
    "v1ComplianceStatement": {
      "type": "object",
      "example": {
        "compliance_policy_identity": "compliance_policies/0000-0000-000000000-00000000",
        "compliant": false
      },
      "properties": {
        "compliance_policy_identity": {
          "type": "string",
          "description": "identity of the compliance policy",
          "title": "compliance_policy identity",
          "readOnly": true,
          "maxLength": 1024
        },
        "compliant": {
          "type": "boolean",
          "description": "status of compliance against the compliance policy",
          "title": "compliance status"
        },
        "reason": {
          "type": "string",
          "description": "reason for non-compliance",
          "readOnly": true,
          "maxLength": 1024
        }
      },
      "description": "simple compliance status against a compliance policy.",
      "title": "A ComplianceStatement gives the status of compliance against a specific Compliance Policy"
    },
    "v1ComplianceType": {
      "type": "string",
      "enum": [
        "COMPLIANCE_TYPE_UNDEFINED",
        "COMPLIANCE_SINCE",
        "COMPLIANCE_CURRENT_OUTSTANDING",
        "COMPLIANCE_PERIOD_OUTSTANDING",
        "COMPLIANCE_DYNAMIC_TOLERANCE",
        "COMPLIANCE_RICHNESS"
      ],
      "default": "COMPLIANCE_TYPE_UNDEFINED",
      "description": " - COMPLIANCE_SINCE: time since specific event greated than X\n - COMPLIANCE_CURRENT_OUTSTANDING: unresolved event currently on asset (eg. vulnerablity)\n - COMPLIANCE_PERIOD_OUTSTANDING: no unresolved events for longer than X\n - COMPLIANCE_DYNAMIC_TOLERANCE: Dynamic tolerance with dynamic window etc..\n - COMPLIANCE_RICHNESS: compliance on comparison of asset attribute value to predefined comparator."
    },
    "v1Filter": {
      "type": "object",
      "example": {
        "or": [
          "group=maintainers",
          "group=supervisors"
        ]
      },
      "properties": {
        "or": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The filter list"
        }
      },
      "description": "Filter"
    },
    "v1ListAssetComplianceRequestOrderBy": {
      "type": "string",
      "enum": [
        "DEFAULT"
      ],
      "default": "DEFAULT",
      "title": "Supported sort orders"
    },
    "v1ListAssetComplianceResponse": {
      "type": "object",
      "example": {
        "compliance": [
          {
            "compliance_policy_identity": "compliance_policies/0000-0000-000000000-00000000",
            "compliant": false
          }
        ],
        "compliant": false,
        "compliant_at": "2019-11-27T14:44:19Z"
      },
      "properties": {
        "compliant": {
          "type": "boolean",
          "description": "overall compliance status for the asset",
          "title": "Overall compliance status.  Will be true only if compliant is true for all applicable compliance_policies, otherwise false"
        },
        "compliance": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ComplianceStatement"
          },
          "description": "list of statemants of compliance with applicable compliance policies",
          "title": "List of compliance statements"
        },
        "next_page_token": {
          "type": "string",
          "description": "Token to retrieve the next page of results or empty if there are none."
        },
        "compliant_at": {
          "type": "string",
          "format": "date-time",
          "description": "time at which compliance is determined",
          "title": "timestamp at which compliance is determined",
          "readOnly": true
        }
      },
      "description": "simple compliance status for an Asset."
    },
    "v1ListCompliancePolicyRequestOrderBy": {
      "type": "string",
      "enum": [
        "DEFAULT"
      ],
      "default": "DEFAULT",
      "title": "Supported sort orders"
    },
    "v1ListCompliancePolicyResponse": {
      "type": "object",
      "example": {
        "compliance_policies": [
          {
            "identity": "compliance_policies/463fab3a-bae5-4349-8f76-f6454da20c9d",
            "compliance_type": "COMPLIANCE_SINCE",
            "description": "sample compliance policy",
            "display_name": "my compliance policy",
            "asset_filter": [
              {
                "or": [
                  "attributes.arc_location_identity:locations/5eef2b71-35c1-4376-a166-6c64bfa72f4b"
                ]
              }
            ],
            "event_display_type": "tracked event",
            "time_period_seconds": 86400
          }
        ],
        "next_page_token": "NDYzZmFiM2EtYmFlNS00MzQ5LThmNzYtZjY0NTRkYTIwYzlkCg=="
      },
      "properties": {
        "compliance_policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CompliancePolicyResponse"
          }
        },
        "next_page_token": {
          "type": "string"
        }
      },
      "description": "simple compliance status for an Asset."
    }
  }
}
